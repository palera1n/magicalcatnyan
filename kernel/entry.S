
.globl _gprintf
.align 2

.globl start
.align 4

.globl _get_x18
.align 4

start:

// 0x0000
b _payload
b _jump_hook
b .
nop

// 0x0010
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop

// 0x0040
gprintf:
.quad 0x4040404040404040

gfsboot:
.quad 0x4141414141414141

gjumpto:
.quad 0x4242424242424242

gpanic:
.quad 0x4343434343434343

// 0x0060 _rootdev
.quad 0x4444444444444444
.quad 0x4444444444444444

// 0x0070 invert_fb
.byte 0x45

// 0x0071 xargs_set
.byte 0x46

// 0x0072 xfb_state
.byte 0x47

// 0x0073 skip_md0_patch
.byte 0x49

// 0x0074 launchd_string
_gLaunchdString:
.ascii "/sbin/launchd\0"

// 0x0082 reserved
// 0x0083 enable_kpf
.byte 0x50
.byte 0x51

// 0x0084 CommandLine
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848

// 0x2e4

#if DEV_BUILD
.globl _crash
.align 4

_crash:
mov x5, x30
ldr x0, =0x800000000
bl _cache_clean_and_invalidate_page
mov x0, #0
svc #0
ic iallu
nop
nop
b .
ret

_cache_clean_and_invalidate_page:
mov x1, #0x80000
mov x2, #0

_one:
cmp x1, x2
b.eq _two
dc civac, x0
add x0, x0, #0x40
add x2, x2, #0x40
b _one

_two:
ret
#endif

_get_x18:
mov x0, x18
ret

nop
nop
nop
nop