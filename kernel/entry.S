
.globl _pl_gprintf
.align 2

.globl _pl_cache_clean_and_invalidate_page
.align 2

.globl _pl_elevate_to_el1
.align 2

.globl start
.align 4
start:

// 0x0000
b _pl_payload
b _pl_jump_hook
b .
nop

// 0x0010
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop

// 0x0040
_pl_gprintf:
.quad 0x4040404040404040

_pl_gfsboot:
.quad 0x4141414141414141

_pl_gjumpto:
.quad 0x4242424242424242

_pl_gpanic:
.quad 0x4343434343434343

// 0x0060 _rootdev
.quad 0x4444444444444444
.quad 0x4444444444444444

// 0x0070 invert_fb
.byte 0x45

// 0x0071 xargs_set
.byte 0x46

// 0x0072 xfb_state
.byte 0x47

// 0x0073 reserved
.byte 0x00

// 0x0074 pl_gBootArgs_p
pl_gBootArgs_p:
.quad 0x1337133713371337
// 0x007b pl_gEntryPoint_p
pl_gEntryPoint_p:
.quad 0xdeaddeaddeaddead

// 0x0084 CommandLine
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848
.quad 0x4848484848484848

// 0x2e4

_pl_elevate_to_el1:
cmp x18, #2351
b.eq _three
mov x5, x30
ldr x0, =0x800000000
bl _pl_cache_clean_and_invalidate_page
mov x0, #0
mov x18, #2351
svc #0
nop
nop
nop
nop

// 0x314
_three:
nop
nop
nop
nop
ic iallu
b _pl_svc_hook
b .

_pl_cache_clean_and_invalidate_page:
mov x1, #0x80000
mov x2, #0

_one:
cmp x1, x2
b.eq _two
dc civac, x0
add x0, x0, #0x40
add x2, x2, #0x40
b _one

_two:
ret

nop
nop
nop
nop